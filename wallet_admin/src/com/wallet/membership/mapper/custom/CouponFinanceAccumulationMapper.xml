<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wallet.membership.mapper.custom.CouponFinanceAccumulationMapper" >

	<resultMap type="hashMap" id="dataMap">
		<result property="contents" column="contents" jdbcType="CLOB" javaType="java.lang.String" />
	</resultMap>
	
	<resultMap id="BaseResultMap" type="com.wallet.membership.model.custom.CouponFinanceAccumulation" >
		<result column="SEARCH_DATE" property="searchDate" jdbcType="VARCHAR" />
		<result column="IDX" property="idx" jdbcType="VARCHAR" />
		<result column="COMP_NAME" property="compName" jdbcType="VARCHAR" />
		<result column="CPN_NAME" property="cpnName" jdbcType="VARCHAR" />
		<result column="CPN_DC_AMOUNT" property="cpnDcAmount" jdbcType="VARCHAR" />
		<result column="CNT" property="cnt" jdbcType="VARCHAR" />
		<result column="SUM_PAY_AMOUNT" property="sumPayAmount" jdbcType="VARCHAR" />
		<result column="SUM_DC_PRICE" property="sumDcPrice" jdbcType="VARCHAR" />
		<result column="COMP_SHARE_RATIO" property="compShareRatio" jdbcType="VARCHAR" />
		<result column="SHARE_SUM_DC_PRICE" property="shareSumDcPrice" jdbcType="VARCHAR" />
	</resultMap>
	
	<select id="selectCouponFinanceAccumulationList" parameterType="HashMap" resultMap="BaseResultMap">
		SELECT ROW_NUMBER() OVER(ORDER BY BB.COMP_NAME) AS IDX
	 , '${sdate} ~ ${edate}' AS SEARCH_DATE
     , BB.COMP_NAME AS COMP_NAME
     , AA.CPN_NAME AS CPN_NAME
     , AA.CPN_DC_AMOUNT AS CPN_DC_AMOUNT
     , AA.CNT AS CNT
     , AA.SUM_PAY_AMOUNT AS SUM_PAY_AMOUNT
     , AA.SUM_DC_PRICE AS SUM_DC_PRICE
     , BB.COMP_SHARE_RATIO AS COMP_SHARE_RATIO
     , AA.SUM_DC_PRICE * (BB.COMP_SHARE_RATIO/100.0) AS SHARE_SUM_DC_PRICE
  FROM (
		SELECT AA.CPN_ID
			 , AA.CPN_NAME
			 , AA.CPN_DC_AMOUNT
			 , CC.CNT
			 , CC.SUM_PAY_AMOUNT
			 , CC.SUM_DC_PRICE
		  FROM (
				SELECT CPN_ID
					 , COUNT(CPN_ID) AS CNT
					 , SUM(TOT_PAY_AMOUNT) AS SUM_PAY_AMOUNT
					 , SUM(ACTUAL_DC_PRICE) AS SUM_DC_PRICE
				  FROM MW_CS_CPN_CONF
				 WHERE REQ_TYPE = 'A' AND CANCEL_YN = 'N'
				   AND CONF_DT BETWEEN REPLACE(#{sdate}, '-', '') AND REPLACE(#{edate}, '-', '')  /* 기간설정*/ 
				 GROUP BY CPN_ID
				) CC INNER JOIN 
				(
				SELECT C.CPN_ID
					 , C.part_v
					 , C.NAME AS CPN_NAME
					 , M.CPN_DISC_TYPE
					 , M.CPN_DISC_AMOUNT
					 , CASE WHEN M.CPN_DISC_TYPE='02' THEN CONVERT(VARCHAR(10),M.CPN_DISC_AMOUNT)+'%' 
							ELSE CONVERT(VARCHAR(10),M.CPN_DISC_AMOUNT)+'원' 
						END AS CPN_DC_AMOUNT
				FROM CPN_LIST C INNER JOIN MW_CS_CPN_LIST M 
					ON C.cpn_id = M.CPN_ID 
					AND C.name LIKE '%${name}%' /*쿠폰명*/
				) AA ON CC.CPN_ID = AA.CPN_ID
	   ) AA INNER JOIN 
	   (
		SELECT CS.CPN_ID
			 , CS.COMP_ID
			 , CB.NAME AS COMP_NAME
			 , CS.COMP_SHARE_RATIO
		FROM MW_CS_CPN_SHARERATIO CS
			INNER JOIN CPN_BANK_INFO CB 
			ON CS.COMP_ID = CB.BANK_ID
			AND CS.COMP_TYPE = '02' 
			AND CB.NAME LIKE '%${compName}%'/*금융사명*/
	   ) BB ON AA.CPN_ID = BB.CPN_ID
	</select>
	
	<select id="selectCouponFinanceAccumulationListCnt" parameterType="HashMap" resultType="java.lang.Integer">
		SELECT COUNT(*) AS CNT
  FROM (
		SELECT AA.CPN_ID
			 , AA.CPN_NAME
			 , AA.CPN_DC_AMOUNT
			 , CC.CNT
			 , CC.SUM_PAY_AMOUNT
			 , CC.SUM_DC_PRICE
		  FROM (
				SELECT CPN_ID
					 , COUNT(CPN_ID) AS CNT
					 , SUM(TOT_PAY_AMOUNT) AS SUM_PAY_AMOUNT
					 , SUM(ACTUAL_DC_PRICE) AS SUM_DC_PRICE
				  FROM MW_CS_CPN_CONF
				 WHERE REQ_TYPE = 'A' AND CANCEL_YN = 'N'
				   AND CONF_DT BETWEEN REPLACE(#{sdate}, '-', '') AND REPLACE(#{edate}, '-', '')  -- 기간설정 
				 GROUP BY CPN_ID
				) CC INNER JOIN 
				(
				SELECT C.CPN_ID
					 , C.part_v
					 , C.NAME AS CPN_NAME
					 , M.CPN_DISC_TYPE
					 , M.CPN_DISC_AMOUNT
					 , CASE WHEN M.CPN_DISC_TYPE='02' THEN CONVERT(VARCHAR(10),M.CPN_DISC_AMOUNT)+'%' 
							ELSE CONVERT(VARCHAR(10),M.CPN_DISC_AMOUNT)+'원' 
						END AS CPN_DC_AMOUNT
				FROM CPN_LIST C INNER JOIN MW_CS_CPN_LIST M 
					ON C.cpn_id = M.CPN_ID 
					AND C.name LIKE '%${name}%' /*쿠폰명*/
				) AA ON CC.CPN_ID = AA.CPN_ID
	   ) AA INNER JOIN 
	   (
		SELECT CS.CPN_ID
			 , CS.COMP_ID
			 , CB.NAME AS COMP_NAME
			 , CS.COMP_SHARE_RATIO
		  FROM MW_CS_CPN_SHARERATIO CS
			INNER JOIN CPN_BANK_INFO CB 
			ON CS.COMP_ID = CB.BANK_ID
			AND CS.COMP_TYPE = '02' 
			AND CB.NAME LIKE '%${compName}%'/*금융사명*/
	   ) BB ON AA.CPN_ID = BB.CPN_ID
	</select>
</mapper>